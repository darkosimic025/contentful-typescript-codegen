{"code":"import { __awaiter, __generator } from \"tslib\";\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nexport function loadEnvironment() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var getEnvironment, environment, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    _b.trys.push([0, , 4, 5]);\r\n                    getEnvironment = getEnvironmentGetter();\r\n                    return [4 /*yield*/, getEnvironment()];\r\n                case 1:\r\n                    environment = _b.sent();\r\n                    _a = {};\r\n                    return [4 /*yield*/, environment.getContentTypes({ limit: 1000 })];\r\n                case 2:\r\n                    _a.contentTypes = (_b.sent());\r\n                    return [4 /*yield*/, environment.getLocales()];\r\n                case 3: return [2 /*return*/, (_a.locales = (_b.sent()),\r\n                        _a)];\r\n                case 4:\r\n                    if (registerer) {\r\n                        registerer.enabled(false);\r\n                    }\r\n                    return [7 /*endfinally*/];\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/* istanbul ignore next */\r\nvar interopRequireDefault = function (obj) {\r\n    return obj && obj.__esModule ? obj : { default: obj };\r\n};\r\nvar registerer = null;\r\nfunction enableTSNodeRegisterer() {\r\n    if (registerer) {\r\n        registerer.enabled(true);\r\n        return;\r\n    }\r\n    try {\r\n        registerer = require(\"ts-node\").register();\r\n        registerer.enabled(true);\r\n    }\r\n    catch (e) {\r\n        if (e.code === \"MODULE_NOT_FOUND\") {\r\n            throw new Error(\"'ts-node' is required for TypeScript configuration files. Make sure it is installed\\nError: \" + e.message);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction determineEnvironmentPath() {\r\n    var pathWithoutExtension = path.resolve(process.cwd(), \"./getContentfulEnvironment\");\r\n    if (fs.existsSync(pathWithoutExtension + \".ts\")) {\r\n        return pathWithoutExtension + \".ts\";\r\n    }\r\n    return pathWithoutExtension + \".js\";\r\n}\r\nfunction getEnvironmentGetter() {\r\n    var getEnvironmentPath = determineEnvironmentPath();\r\n    if (getEnvironmentPath.endsWith(\".ts\")) {\r\n        enableTSNodeRegisterer();\r\n        return interopRequireDefault(require(getEnvironmentPath)).default;\r\n    }\r\n    return require(getEnvironmentPath);\r\n}\r\n//# sourceMappingURL=loadEnvironment.js.map","references":["/Users/darkosimic/Documents/Workshop_1/contentful-typescript-codegen/node_modules/contentful/index.d.ts","/Users/darkosimic/Documents/Workshop_1/contentful-typescript-codegen/node_modules/ts-node/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"loadEnvironment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/loadEnvironment.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,IAAI,MAAM,MAAM,CAAA;AAC5B,OAAO,KAAK,EAAE,MAAM,IAAI,CAAA;AAWxB,MAAM,UAAgB,eAAe;;;;;;;oBAE3B,cAAc,GAAG,oBAAoB,EAAE,CAAA;oBACzB,qBAAM,cAAc,EAAE,EAAA;;oBAApC,WAAW,GAAG,SAAsB;;oBAGzB,qBAAM,WAAW,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA;;oBAAjE,eAAY,GAAE,CAAC,SAAkD,CAA0B;oBACjF,qBAAM,WAAW,CAAC,UAAU,EAAE,EAAA;wBAF1C,uBAEE,UAAO,GAAE,CAAC,SAA8B,CAAqB;6BAC9D;;oBAED,IAAI,UAAU,EAAE;wBACd,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;qBAC1B;;;;;;CAEJ;AAED,0BAA0B;AAC1B,IAAM,qBAAqB,GAAG,UAAC,GAAQ;IACrC,OAAA,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE;AAA9C,CAA8C,CAAA;AAIhD,IAAI,UAAU,GAAsB,IAAI,CAAA;AAExC,SAAS,sBAAsB;IAC7B,IAAI,UAAU,EAAE;QACd,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAExB,OAAM;KACP;IAED,IAAI;QACF,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAgB,CAAA;QACxD,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACzB;IAAC,OAAO,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,IAAI,KAAK,kBAAkB,EAAE;YACjC,MAAM,IAAI,KAAK,CACb,iGAA+F,CAAC,CAAC,OAAS,CAC3G,CAAA;SACF;QAED,MAAM,CAAC,CAAA;KACR;AACH,CAAC;AAED,SAAS,wBAAwB;IAC/B,IAAM,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,4BAA4B,CAAC,CAAA;IAEtF,IAAI,EAAE,CAAC,UAAU,CAAI,oBAAoB,QAAK,CAAC,EAAE;QAC/C,OAAU,oBAAoB,QAAK,CAAA;KACpC;IAED,OAAU,oBAAoB,QAAK,CAAA;AACrC,CAAC;AAED,SAAS,oBAAoB;IAC3B,IAAM,kBAAkB,GAAG,wBAAwB,EAAE,CAAA;IAErD,IAAI,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACtC,sBAAsB,EAAE,CAAA;QAExB,OAAO,qBAAqB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAA;KAClE;IAED,OAAO,OAAO,CAAC,kBAAkB,CAAC,CAAA;AACpC,CAAC\"}","dts":{"name":"/Users/darkosimic/Documents/Workshop_1/contentful-typescript-codegen/dist/types/loadEnvironment.d.ts","writeByteOrderMark":false,"text":"import { ContentfulCollection, ContentTypeCollection, LocaleCollection } from \"contentful\";\r\nexport interface ContentfulEnvironment {\r\n    getContentTypes(options: {\r\n        limit: number;\r\n    }): Promise<ContentfulCollection<unknown>>;\r\n    getLocales(): Promise<ContentfulCollection<unknown>>;\r\n}\r\nexport declare type EnvironmentGetter = () => Promise<ContentfulEnvironment>;\r\nexport declare function loadEnvironment(): Promise<{\r\n    contentTypes: ContentTypeCollection;\r\n    locales: LocaleCollection;\r\n}>;\r\n"}}
